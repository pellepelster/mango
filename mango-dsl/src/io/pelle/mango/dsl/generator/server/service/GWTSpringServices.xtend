/*
 * generated by Xtext
 */
package io.pelle.mango.dsl.generator.server.service

import com.google.inject.Inject
import io.pelle.mango.dsl.generator.client.ClientNameUtils
import io.pelle.mango.dsl.generator.server.ServerNameUtils
import io.pelle.mango.dsl.mango.Model
import io.pelle.mango.dsl.mango.Service
import java.util.HashMap
import java.util.Map
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.context.annotation.Bean
import org.springframework.context.annotation.Configuration

class GWTSpringServices {

	@Inject
	extension ServerNameUtils

	@Inject
	extension ServiceNameUtils

	@Inject
	ClientNameUtils clientNameUtils
	
	def gwtRemoteServicesApplicationContext(Model model) '''
		package «model.gwtRemoteServicesApplicationContextPackageName»;

		@«Configuration.name»
		public class «model.gwtRemoteServicesApplicationContextName» {

			«FOR service: model.eAllContents.toIterable.filter(Service)»
			@«Autowired.name»
			private «clientNameUtils.serviceInterfaceFullQualifiedName(service)» «service.serviceSpringName»;
			
			«ENDFOR»
			
			@«Bean.name»
			@«Autowired.name»
			public org.gwtwidgets.server.spring.GWTHandler «model.modelName.toFirstLower»(org.gwtwidgets.server.spring.RPCServiceExporterFactory serviceExporterFactory) {
				org.gwtwidgets.server.spring.GWTHandler result = new org.gwtwidgets.server.spring.GWTHandler();
				result.setServiceExporterFactory(serviceExporterFactory);

				«Map.name»<«String.name»,«Object.name»> mappings = new «HashMap.name»<«String.name»,«Object.name»>();
				
				«FOR service: model.eAllContents.toIterable.filter(Service)»
				mappings.put("/rpc/«service.serviceSpringName»", «service.serviceSpringName»);
				«ENDFOR»
				
				result.setMappings(mappings);
				
				return result; 
			}
		}
	'''

	def restRemoteServicesApplicationContext(Model model) '''
	package «model.restRemoteServicesApplicationContextPackageName»;

	@«Configuration.name»
	public class «model.restRemoteServicesApplicationContextName» {
	
		«FOR service: model.eAllContents.toIterable.filter(Service)»
		@«Bean.name»
		public «service.restControllerFullQualifiedName» «service.restControllerBeanName»() {
			return new «service.restControllerFullQualifiedName»();
		}
		«ENDFOR»
	
	}
	'''
	
}