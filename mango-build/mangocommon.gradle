def getBuildTimeStamp() {
	def date = new Date()
	def formattedDate = date.format('yyyyMMddHHmmss')
	return formattedDate
}

ext {
	buildTimeStamp = getBuildTimeStamp()
	isReleaseVersion = false
}

gradle.taskGraph.whenReady { taskGraph ->

	if (taskGraph.hasTask(':uploadArchives')) {
		isReleaseVersion = true
	} else {
		isReleaseVersion = false
	}
	
}
	
allprojects {

	apply plugin: 'maven'
	apply plugin: 'signing'
	apply plugin: 'project-report'

	if (!versionQualifier) {
		versionQualifier = buildTimeStamp 
	}
	
	version = mangoVersion + "-" + versionQualifier

	repositories {
		
		ivy {
			name "releaseBuildRepository"
			url "../mango-build/build/repository"
			layout "maven"
		}
		
		ivy {
			name "localDevelopmentRepository"
			url System.properties['user.home'] + "/.gradle/mango_development"
			layout "maven"
		}

	    ivy {
	        name "mangoCiRepository"
	        url "http://zoidberg.pelle.io/~mango-ci/repository/"
	        layout "maven"
		}

		maven {
			name "gwt-sl"
			url "https://raw.github.com/ggeorgovassilis/gwt-sl/mvn-repo/"
		}

		mavenCentral()
		
	}
	
	task(versionInfo) << {
		println "======================================="
		println "version: $version"
		println "======================================="
	}

	configurations {
		archives.extendsFrom(testArtifacts)
		localDevelopment.extendsFrom(archives)
		releaseBuild.extendsFrom(archives)
	}
	
	uploadLocalDevelopment {
		repositories { 
			add project.repositories.localDevelopmentRepository
		}
	}

	uploadReleaseBuild {
		repositories { 
			add project.repositories.releaseBuildRepository
		}
	}

	signing {
		required { 
			isReleaseVersion
		}
		
		sign configurations.archives
	}
	
	uploadArchives {
		
		repositories {
			
			mavenDeployer {

 				configuration = configurations.archives
 
				beforeDeployment { MavenDeployment deployment ->
					signing.signPom(deployment)
				}
	
				repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
					authentication(userName: ossrhUsername, password: ossrhPassword)
				}
	
				snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
					authentication(userName: ossrhUsername, password: ossrhPassword)
				}
        
				pom.project {
				
					name 'mango'
					packaging 'jar'
					
					// optionally artifactId can be defined here
					description 'mango web framework'
					url 'http://pellepelster.github.io/mango/'
	
					scm {
						connection 'scm:git:git@github.com:pellepelster/mango.git'
						developerConnection 'scm:git:git@github.com:pellepelster/mango.git'
						url 'https://github.com/pellepelster/mango'
					}
	
					licenses {
						license {
							name 'The Apache Software License, Version 2.0'
							url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
						}
					}
	
					developers {
						developer {
							id 'pelle'
							name 'Pelle Pelster'
							email 'pelle@pelle.io'
						}
					}
				}
			}
		}
	}

	uploadArchives.onlyIf { ! project.name.startsWith('mango-demo') }
}
